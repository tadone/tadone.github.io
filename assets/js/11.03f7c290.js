(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{175:function(e,t,a){"use strict";a.r(t);var s=a(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"web-development-knowledge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-development-knowledge","aria-hidden":"true"}},[e._v("#")]),e._v(" Web Development Knowledge")]),e._v(" "),a("h2",{attrs:{id:"jwt-tokens"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt-tokens","aria-hidden":"true"}},[e._v("#")]),e._v(" JWT Tokens")]),e._v(" "),a("p",[e._v("JSON Web Token (JWT) allows for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed.")]),e._v(" "),a("p",[e._v("Using JSON Web Tokens for Authrization:")]),e._v(" "),a("ul",[a("li",[e._v("Once the user is logged in, each subsequent request will include the JWT, allowing the user to access routes, services, and resources that are permitted with that token.")]),e._v(" "),a("li",[e._v("Single Sign On is a feature that widely uses JWT nowadays, because of its small overhead and its ability to be easily used across different domains.")])]),e._v(" "),a("h3",{attrs:{id:"jwtoken-structure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwtoken-structure","aria-hidden":"true"}},[e._v("#")]),e._v(" JWToken Structure")]),e._v(" "),a("p",[e._v("In its compact form, JSON Web Tokens consist of three parts separated by dots (.), which are:")]),e._v(" "),a("ul",[a("li",[e._v("Header")]),e._v(" "),a("li",[e._v("Payload")]),e._v(" "),a("li",[e._v("Signature\nTherefore, a JWT typically looks like the following.")])]),e._v(" "),a("p",[a("code",[e._v("xxxxx.yyyyy.zzzzz")])]),e._v(" "),a("h3",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("p",[a("strong",[e._v("Header")]),e._v("\nThe header typically consists of two parts: the type of the token, which is JWT, and the hashing algorithm being used, such as HMAC SHA256 or RSA.")]),e._v(" "),a("p",[e._v("This JSON is Base64Url encoded to form the "),a("strong",[e._v("first part")]),e._v(" of the "),a("code",[e._v("JWT")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"alg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"HS256"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"typ"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"JWT"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[a("strong",[e._v("Payload")]),e._v("\nThe second part of the token is the "),a("code",[e._v("payload")]),e._v(", which contains the claims. Claims are statements about an entity (typically, the user) and additional data. There are three types of claims: "),a("code",[e._v("registered")]),e._v(", "),a("code",[e._v("public")]),e._v(", and "),a("code",[e._v("private claims")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"sub"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1234567890"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"John Doe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"admin"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\nThe payload is then Base64Url encoded to form the **second part** of the JSON Web Token.\n")])])]),a("p",[a("strong",[e._v("Signature")]),e._v("\nThe signature is used to verify the message wasn't changed along the way, and, in the case of tokens signed with a private key, it can also verify that the sender of the JWT is who it says it is.")]),e._v(" "),a("p",[a("strong",[e._v("Putting all together")]),e._v("\nThe output is three Base64-URL strings separated by dots that can be easily passed in HTML and HTTP environments.")]),e._v(" "),a("p",[e._v("The following shows a JWT that has the previous header and payload encoded, and it is signed with a secret:\n"),a("img",{attrs:{src:"https://cdn.auth0.com/content/jwt/encoded-jwt3.png",alt:"JWT Example"}})]),e._v(" "),a("h3",{attrs:{id:"using-jwtokens"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-jwtokens","aria-hidden":"true"}},[e._v("#")]),e._v(" Using JWTokens")]),e._v(" "),a("p",[e._v("In authentication, when the user successfully logs in using their credentials, a JSON Web Token will be returned. Since tokens are credentials, great care must be taken to prevent security issues. In general, you should not keep tokens longer than required.")]),e._v(" "),a("p",[e._v("Whenever the user wants to access a protected route or resource, the user agent should send the JWT, typically in the Authorization header using the Bearer schema. The content of the header should look like the following:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Authorization: Bearer <token>\n")])])]),a("p",[e._v("The following diagram shows how a JWT is obtained and used to access APIs or resources:\n"),a("img",{attrs:{src:"https://cdn2.auth0.com/docs/media/articles/api-auth/client-credentials-grant.png",alt:"JWT API"}})]),e._v(" "),a("ol",[a("li",[e._v("The application or client requests authorization to the authorization server. This is performed through one of the different authorization flows. For example, a typical OpenID Connect compliant web application will go through the /oauth/authorize endpoint using the authorization code flow.")]),e._v(" "),a("li",[e._v("When the authorization is granted, the authorization server returns an access token to the application.")]),e._v(" "),a("li",[e._v("The application uses the access token to access a protected resource (like an API).")])])])}],!1,null,null,null);n.options.__file="webdev.md";t.default=n.exports}}]);