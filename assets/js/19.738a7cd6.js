(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{162:function(s,a,t){"use strict";t.r(a);var e=t(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"config"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#config","aria-hidden":"true"}},[s._v("#")]),s._v(" Config")]),s._v(" "),t("p",[s._v("Run kubectl with a specific config file\n"),t("code",[s._v("kubectl --kubeconfig=$HOME/.kube/cie-develop.config <command>")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{attrs:{class:"token comment"}},[s._v("# Copy cie-ENV.config files to ~/.kube/")]),s._v("\n"),t("span",{attrs:{class:"token function"}},[s._v("export")]),s._v(" KUBECONFIG"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),t("span",{attrs:{class:"token variable"}},[t("span",{attrs:{class:"token variable"}},[s._v("$(")]),t("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" $"),t("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("HOME"),t("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("/.kube/cie-*.config "),t("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{attrs:{class:"token string"}},[s._v("'s/ /:/g'")]),t("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),t("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),t("span",{attrs:{class:"token string"}},[s._v('"KUBECONFIG set..."')]),s._v("\nkubectl config view --flatten --merge "),t("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{attrs:{class:"token variable"}},[s._v("${HOME}")]),s._v("/.kube/config "),t("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),t("span",{attrs:{class:"token string"}},[s._v('"Combined ~/.kube/config created..."')]),s._v("\n"),t("span",{attrs:{class:"token function"}},[s._v("chmod")]),s._v(" 600 "),t("span",{attrs:{class:"token variable"}},[s._v("${HOME}")]),s._v("/.kube/config "),t("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),t("span",{attrs:{class:"token string"}},[s._v('"Finished"')]),s._v("\n")])])]),t("h2",{attrs:{id:"get"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get","aria-hidden":"true"}},[s._v("#")]),s._v(" Get")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl get namespaces\nkubectl --namespace"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("hello-worlds-dev get pods\n\n"),t("span",{attrs:{class:"token comment"}},[s._v("# List all pods in ps output format with more information (such as node name).")]),s._v("\nkubectl --namespace"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("default get pods -o wide\n\n\nkubectl get pods --field-selector"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("status.phase"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("Running  "),t("span",{attrs:{class:"token comment"}},[s._v("# Get all running pods in the namespace")]),s._v("\n\nkubectl get services                          "),t("span",{attrs:{class:"token comment"}},[s._v("# List all services in the namespace")]),s._v("\n\nkubectl --namespace"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("saas-aware-dev get pods --show-labels  "),t("span",{attrs:{class:"token comment"}},[s._v("# Show pod labels")]),s._v("\n\n"),t("span",{attrs:{class:"token comment"}},[s._v("# get the external ip address for the load balancer")]),s._v("\nkubectl get svc --namespace"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("gitlab-managed-apps ingress-nginx-ingress-controller -o jsonpath"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),t("span",{attrs:{class:"token string"}},[s._v("'{.status.loadBalancer.ingress[0].ip}'")]),t("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v("\n"),t("span",{attrs:{class:"token comment"}},[s._v("# alternatively")]),s._v("\nkubectl get svc --all-namespaces"),t("span",{attrs:{class:"token operator"}},[s._v("|")]),t("span",{attrs:{class:"token function"}},[s._v("grep")]),s._v(" LoadBalancer"),t("span",{attrs:{class:"token operator"}},[s._v("|")]),t("span",{attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{attrs:{class:"token string"}},[s._v("'{print "),t("span",{attrs:{class:"token variable"}},[s._v("$5")]),s._v("};'")]),s._v("\n\n"),t("span",{attrs:{class:"token comment"}},[s._v("# Get all running pods in the namespace")]),s._v("\nkubectl get pods --field-selector"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("status.phase"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("Running\n\n"),t("span",{attrs:{class:"token comment"}},[s._v("# Get ExternalIPs of all nodes")]),s._v("\nkubectl get nodes -o jsonpath"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),t("span",{attrs:{class:"token string"}},[s._v("'{.items[*].status.addresses[?(@.type==\"ExternalIP\")].address}'")]),s._v("\n\n"),t("span",{attrs:{class:"token comment"}},[s._v("# List Events sorted by timestamp")]),s._v("\nkubectl get events --sort-by"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(".metadata.creationTimestamp\n")])])]),t("h2",{attrs:{id:"describe"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#describe","aria-hidden":"true"}},[s._v("#")]),s._v(" Describe")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubedev --namespace"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("saas-aware-dev describe pod aware-ingest-dev-8554757b8b-f2bcl "),t("span",{attrs:{class:"token comment"}},[s._v("# Describe a pod")]),s._v("\n")])])]),t("h2",{attrs:{id:"logs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#logs","aria-hidden":"true"}},[s._v("#")]),s._v(" Logs")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl logs microspringboot1-2-nz8f8             "),t("span",{attrs:{class:"token comment"}},[s._v("# Pod logs")]),s._v("\nkubectl logs --tail"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("5 my_pod -c my_container      "),t("span",{attrs:{class:"token comment"}},[s._v("# Last 5 log lines for pod/container")]),s._v("\n")])])]),t("h2",{attrs:{id:"exec"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exec","aria-hidden":"true"}},[s._v("#")]),s._v(" Exec")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl "),t("span",{attrs:{class:"token function"}},[s._v("exec")]),s._v(" -it --namespace"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("microworld microspringboot1-2-nz8f8 /bin/bash "),t("span",{attrs:{class:"token comment"}},[s._v("# Enter container running in K8s")]),s._v("\n")])])]),t("h2",{attrs:{id:"run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run","aria-hidden":"true"}},[s._v("#")]),s._v(" Run")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl run --image ubuntu -it "),t("span",{attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),t("h2",{attrs:{id:"troubleshooting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting","aria-hidden":"true"}},[s._v("#")]),s._v(" Troubleshooting")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl get events          "),t("span",{attrs:{class:"token comment"}},[s._v("# Get all events in cluster")]),s._v("\n")])])]),t("h2",{attrs:{id:"system"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#system","aria-hidden":"true"}},[s._v("#")]),s._v(" System")]),s._v(" "),t("p",[s._v("kube-system is the namespace for objects created by the Kubernetes system.")]),s._v(" "),t("p",[s._v("Typically, this would contain pods like kube-dns, kube-proxy, kubernetes-dashboard and stuff like fluentd, heapster, ingresses and so on.")]),s._v(" "),t("h2",{attrs:{id:"scale"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scale","aria-hidden":"true"}},[s._v("#")]),s._v(" Scale")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("kubectl scale deployment/update-demo --replicas=0; kubectl scale deployment/update-demo --replicas=4;\n")])])])])}],!1,null,null,null);n.options.__file="kubectl.md";a.default=n.exports}}]);