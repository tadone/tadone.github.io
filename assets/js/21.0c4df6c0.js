(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{185:function(s,a,e){"use strict";e.r(a);var t=e(0),n=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("div",{staticClass:"content"},[e("h2",{attrs:{id:"config"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#config","aria-hidden":"true"}},[s._v("#")]),s._v(" Config")]),s._v(" "),e("p",[s._v("Run kubectl with a specific config file\n"),e("code",[s._v("kubectl --kubeconfig=$HOME/.kube/cie-develop.config <command>")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copy cie-ENV.config files to ~/.kube/")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("export")]),s._v(" KUBECONFIG"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("HOME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("/.kube/cie-*.config "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/ /:/g'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"KUBECONFIG set..."')]),s._v("\nkubectl config view --flatten --merge "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${HOME}")]),s._v("/.kube/config "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Combined ~/.kube/config created..."')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" 600 "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${HOME}")]),s._v("/.kube/config "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Finished"')]),s._v("\n")])])]),e("h2",{attrs:{id:"namespaces"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#namespaces","aria-hidden":"true"}},[s._v("#")]),s._v(" Namespaces")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl get namespaces\nkubectl --namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hello-worlds-dev get pods\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List all pods in ps output format with more information (such as node name).")]),s._v("\nkubectl --namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("default get pods -o wide\n")])])]),e("h2",{attrs:{id:"pods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pods","aria-hidden":"true"}},[s._v("#")]),s._v(" Pods")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl get pods --field-selector"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("status.phase"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Running  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Get all running pods in the namespace")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Delete a pod that's hanging in terminating step")]),s._v("\nkubectl delete pod test-admin-adapter-dev-6575477fb9-vsm9h --grace-period"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("0 --force\nkubectl get services                          "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List all services in the namespace")]),s._v("\n\nkubectl --namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("saas-aware-dev get pods --show-labels  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Show pod labels")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get the external ip address for the load balancer")]),s._v("\nkubectl get svc --namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("gitlab-managed-apps ingress-nginx-ingress-controller -o jsonpath"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{.status.loadBalancer.ingress[0].ip}'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# alternatively")]),s._v("\nkubectl get svc --all-namespaces"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" LoadBalancer"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$5")]),s._v("};'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Get all running pods in the namespace")]),s._v("\nkubectl get pods --field-selector"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("status.phase"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Running\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Get ExternalIPs of all nodes")]),s._v("\nkubectl get nodes -o jsonpath"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{.items[*].status.addresses[?(@.type==\"ExternalIP\")].address}'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List Events sorted by timestamp")]),s._v("\nkubectl get events --sort-by"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".metadata.creationTimestamp\n")])])]),e("h2",{attrs:{id:"describe"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#describe","aria-hidden":"true"}},[s._v("#")]),s._v(" Describe")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubedev --namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("saas-aware-dev describe pod aware-ingest-dev-8554757b8b-f2bcl "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Describe a pod")]),s._v("\n")])])]),e("h2",{attrs:{id:"logs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logs","aria-hidden":"true"}},[s._v("#")]),s._v(" Logs")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl logs microspringboot1-2-nz8f8             "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Pod logs")]),s._v("\nkubectl logs --tail"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("5 my_pod -c my_container      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Last 5 log lines for pod/container")]),s._v("\n")])])]),e("h2",{attrs:{id:"exec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exec","aria-hidden":"true"}},[s._v("#")]),s._v(" Exec")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("exec")]),s._v(" -it --namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("microworld microspringboot1-2-nz8f8 /bin/bash "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Enter container running in K8s")]),s._v("\n")])])]),e("h2",{attrs:{id:"run"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run","aria-hidden":"true"}},[s._v("#")]),s._v(" Run")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl run --image ubuntu -it "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),e("h2",{attrs:{id:"troubleshooting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting","aria-hidden":"true"}},[s._v("#")]),s._v(" Troubleshooting")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl get events          "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Get all events in cluster")]),s._v("\n")])])]),e("h2",{attrs:{id:"system"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#system","aria-hidden":"true"}},[s._v("#")]),s._v(" System")]),s._v(" "),e("p",[s._v("kube-system is the namespace for objects created by the Kubernetes system.")]),s._v(" "),e("p",[s._v("Typically, this would contain pods like kube-dns, kube-proxy, kubernetes-dashboard and stuff like fluentd, heapster, ingresses and so on.")]),s._v(" "),e("h2",{attrs:{id:"scale"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scale","aria-hidden":"true"}},[s._v("#")]),s._v(" Scale")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl scale deployment/update-demo --replicas"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" kubectl scale deployment/update-demo --replicas"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])}],!1,null,null,null);n.options.__file="kubectl.md";a.default=n.exports}}]);