(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{169:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"kubernetes-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-objects","aria-hidden":"true"}},[t._v("#")]),t._v(" Kubernetes Objects")]),t._v(" "),s("h2",{attrs:{id:"configmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configmap","aria-hidden":"true"}},[t._v("#")]),t._v(" ConfigMap")]),t._v(" "),s("p",[t._v("The ConfigMap object provides mechanisms to inject containers with configuration data. A "),s("code",[t._v("ConfigMap")]),t._v(" can be used to store fine-grained information like individual properties or coarse-grained information like entire configuration files or JSON blobs.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ConfigMap\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("staging"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sidekiq\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("staging"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sidekiq\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("data")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("config")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token key atrule"}},[t._v("verbose")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" staging\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token key atrule"}},[t._v("pidfile")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tmp/pids/sidekiq.pid\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token key atrule"}},[t._v("logfile")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" log/sidekiq.log\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token key atrule"}},[t._v("concurrency")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("20")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token key atrule"}},[t._v("queues")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("default"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token key atrule"}},[t._v("dynamic")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token key atrule"}},[t._v("timeout")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("300")]),t._v("\n")])])]),s("p",[t._v("The above template creates "),s("code",[t._v("ConfigMap")]),t._v(" in the test namespace and is only accessible in that namespace. After that let’s use this "),s("code",[t._v("configmap")]),t._v(" as a "),s("code",[t._v("volume")]),t._v(" to create our "),s("code",[t._v("sidekiq.yml")]),t._v(" configuration file in deployment template named "),s("code",[t._v("test-deployment.yml")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"configmap-as-volume"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configmap-as-volume","aria-hidden":"true"}},[t._v("#")]),t._v(" ConfigMap as Volume:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("staging\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("staging\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("staging\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <your"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo"),s("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v("/<your"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("image"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name"),s("span",{attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("staging\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /etc/sidekiq/config\n              "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("staging"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sidekiq\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("staging"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sidekiq\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("configMap")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n             "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("staging"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sidekiq             "),s("span",{attrs:{class:"token comment"}},[t._v("# Name of ConfigMap to use")]),t._v("\n             "),s("span",{attrs:{class:"token key atrule"}},[t._v("items")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                                 \n              "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config\n                "),s("span",{attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  sidekiq.yml                  "),s("span",{attrs:{class:"token comment"}},[t._v("# File created in VolumeMount")]),t._v("\n")])])]),s("p",[t._v("Further if we want to make changes, we can simply modify the "),s("code",[t._v("configmap")]),t._v(" template and restart the pod or scale down/up.")]),t._v(" "),s("h3",{attrs:{id:"configure-all-key-value-pairs-in-a-configmap-as-container-env-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configure-all-key-value-pairs-in-a-configmap-as-container-env-variables","aria-hidden":"true"}},[t._v("#")]),t._v(" Configure all key-value pairs in a ConfigMap as container ENV variables")]),t._v(" "),s("p",[t._v("ConfigMap with one environment variable")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("   "),s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n   "),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ConfigMap\n   "),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" special"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config\n     "),s("span",{attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n   "),s("span",{attrs:{class:"token key atrule"}},[t._v("data")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{attrs:{class:"token key atrule"}},[t._v("SPECIAL_LEVEL")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" very\n     "),s("span",{attrs:{class:"token key atrule"}},[t._v("SPECIAL_TYPE")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" charm\n")])])]),s("p",[t._v("You can consume the keys of this ConfigMap in a pod using configMapKeyRef sections. Use "),s("code",[t._v("envFrom")]),t._v(" to define all of the ConfigMap’s data as container environment variables. The key from the "),s("code",[t._v("ConfigMap")]),t._v(" becomes the environment variable name in the Pod.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("   "),s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n   "),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n   "),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dapi"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n   "),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n       "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("container\n         "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s.gcr.io/busybox\n         "),s("span",{attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"/bin/sh"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"-c"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"env"')]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n         "),s("span",{attrs:{class:"token key atrule"}},[t._v("envFrom")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("configMapRef")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n             "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" special"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config             "),s("span",{attrs:{class:"token comment"}},[t._v("# Name of the config map")]),t._v("\n     "),s("span",{attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never\n")])])]),s("p",[t._v("The pod will have ENV variables "),s("code",[t._v("SPECIAL_LEVEL=very")]),t._v(" and "),s("code",[t._v("SPECIAL_TYPE=charm")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"use-configmap-defined-environment-variables-in-pod-commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-configmap-defined-environment-variables-in-pod-commands","aria-hidden":"true"}},[t._v("#")]),t._v(" Use ConfigMap-defined environment variables in Pod commands")]),t._v(" "),s("p",[t._v("You can use ConfigMap-defined environment variables in the command section of the Pod specification using the $(VAR_NAME) Kubernetes substitution syntax.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dapi"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("container\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s.gcr.io/busybox\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"/bin/sh"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"-c"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"echo $(SPECIAL_LEVEL_KEY) $(SPECIAL_TYPE_KEY)"')]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SPECIAL_LEVEL_KEY\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("valueFrom")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{attrs:{class:"token key atrule"}},[t._v("configMapKeyRef")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" special"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config\n              "),s("span",{attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SPECIAL_LEVEL\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SPECIAL_TYPE_KEY\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("valueFrom")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{attrs:{class:"token key atrule"}},[t._v("configMapKeyRef")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" special"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config\n              "),s("span",{attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SPECIAL_TYPE\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never\n")])])]),s("p",[t._v("Produces the following output in the test-container container: "),s("code",[t._v("very charm")])]),t._v(" "),s("h2",{attrs:{id:"volume"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volume","aria-hidden":"true"}},[t._v("#")]),t._v(" Volume")]),t._v(" "),s("p",[t._v("At its core, a volume is just a directory, possibly with some data in it, which is accessible to the Containers in a Pod. How that directory comes to be, the medium that backs it, and the contents of it are determined by the particular volume type used.")]),t._v(" "),s("h3",{attrs:{id:"volume-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volume-types","aria-hidden":"true"}},[t._v("#")]),t._v(" Volume Types:")]),t._v(" "),s("p",[t._v("Kubernetes supports several types of Volumes (most common):")]),t._v(" "),s("ul",[s("li",[t._v("node-local types:\n"),s("ul",[s("li",[s("a",{attrs:{href:"#emptyDir"}},[t._v("emptyDir")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#hostPath"}},[t._v("hostPath")])])])]),t._v(" "),s("li",[t._v("cloud provider-specific\n"),s("ul",[s("li",[t._v("azureDisk")]),t._v(" "),s("li",[s("a",{attrs:{href:"#gcePersistentDisk"}},[t._v("gcePersistentDisk")])])])]),t._v(" "),s("li",[t._v("distributed file system\n"),s("ul",[s("li",[t._v("glusterfs")]),t._v(" "),s("li",[t._v("cephfs")])])]),t._v(" "),s("li",[t._v("special purpose\n"),s("ul",[s("li",[s("a",{attrs:{href:"#configMap"}},[t._v("configMap")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#secret"}},[t._v("secret")])]),t._v(" "),s("li",[t._v("downwardAPI")])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#persistentVolumeClaim"}},[t._v("persistentVolumeClaim")])])]),t._v(" "),s("h4",{attrs:{id:"type-configmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-configmap","aria-hidden":"true"}},[t._v("#")]),t._v(" Type: configMap")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("You must create a ConfigMap before you can use it.")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("log-config")]),t._v(" ConfigMap is mounted as a volume, and all contents stored in its "),s("code",[t._v("log_level")]),t._v(" entry are mounted into the Pod at path "),s("code",[t._v("/etc/config/log_level")]),t._v(". Note that this path is derived from the volume’s "),s("code",[t._v("mountPath")]),t._v(" and the "),s("code",[t._v("path")]),t._v(" keyed with "),s("code",[t._v("log_level")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" configmap"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("vol\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /etc/config\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("vol\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("configMap")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" log"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("items")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" log_level\n            "),s("span",{attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" log_level\n")])])]),s("h4",{attrs:{id:"type-emptydir"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-emptydir","aria-hidden":"true"}},[t._v("#")]),t._v(" Type: emptyDir")]),t._v(" "),s("p",[t._v("By default, "),s("code",[t._v("emptyDir")]),t._v(" volumes are stored on whatever medium is backing the node - that might be disk or SSD or network storage, depending on your environment. However, you can set the "),s("code",[t._v("emptyDir.medium")]),t._v(" field to "),s("code",[t._v("Memory")]),t._v(" to tell Kubernetes to mount a tmpfs (RAM-backed filesystem) for you instead. While tmpfs is very fast, be aware that unlike disks, tmpfs is cleared on node reboot and any files you write will count against your Container’s memory limit.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pd\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s.gcr.io/test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("webserver\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("container\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /cache\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cache"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cache"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("emptyDir")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"type-hostpath"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-hostpath","aria-hidden":"true"}},[t._v("#")]),t._v(" Type: hostPath")]),t._v(" "),s("p",[t._v("A "),s("code",[t._v("hostPath")]),t._v(" volume mounts a file or directory from the host node’s filesystem into your Pod."),s("br"),t._v("\nFor example, some uses for a "),s("code",[t._v("hostPath")]),t._v(" are:")]),t._v(" "),s("ul",[s("li",[t._v("running a Container that needs access to Docker internals; use a "),s("code",[t._v("hostPath")]),t._v(" of "),s("code",[t._v("/var/lib/docker")])]),t._v(" "),s("li",[t._v("running cAdvisor in a Container; use a "),s("code",[t._v("hostPath")]),t._v(" of "),s("code",[t._v("/sys")])])]),t._v(" "),s("p",[t._v("The supported values for field type are (if empty, no checks will be performed):")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Value")]),t._v(" "),s("th",[t._v("Behavior")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("DirectoryOrCreate")]),t._v(" "),s("td",[t._v("If nothing exists at the given path, an empty directory will be created there as needed with permission set to 0755, having the same group and ownership with Kubelet.")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("Directory")])]),t._v(" "),s("td",[t._v("A directory must exist at the given path")])]),t._v(" "),s("tr",[s("td",[t._v("FileOrCreate")]),t._v(" "),s("td",[t._v("If nothing exists at the given path, an empty file will be created there as needed with permission set to 0644, having the same group and ownership with Kubelet.")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("File")])]),t._v(" "),s("td",[t._v("A file must exist at the given path")])]),t._v(" "),s("tr",[s("td",[t._v("Socket")]),t._v(" "),s("td",[t._v("A UNIX socket must exist at the given path")])])])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pd\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s.gcr.io/test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("webserver\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("container\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pd\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("hostPath")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token comment"}},[t._v("# directory location on host")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /data\n      "),s("span",{attrs:{class:"token comment"}},[t._v("# this field is optional")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Directory\n")])])]),s("h4",{attrs:{id:"type-persistentvolumeclaim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-persistentvolumeclaim","aria-hidden":"true"}},[t._v("#")]),t._v(" Type: persistentVolumeClaim")]),t._v(" "),s("p",[t._v("A persistentVolumeClaim volume is used to mount a "),s("code",[t._v("PersistentVolume")]),t._v(" into a Pod. "),s("code",[t._v("PersistentVolumes")]),t._v(" are a way for users to “claim” durable storage (such as a GCE PersistentDisk or an iSCSI volume) without knowing the details of the particular cloud environment.\nSee the "),s("strong",[t._v("PersistentVolumes")]),t._v(" example for more details.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mypod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myfrontend\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"/var/www/html"')]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mypd\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mypd\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("persistentVolumeClaim")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("claimName")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myclaim\n")])])]),s("h2",{attrs:{id:"persistentvolume"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#persistentvolume","aria-hidden":"true"}},[t._v("#")]),t._v(" PersistentVolume")]),t._v(" "),s("p",[t._v("There are two ways PVs may be provisioned: statically or dynamically.")]),t._v(" "),s("ul",[s("li",[t._v("Static: A cluster administrator creates a number of PVs. They carry the details of the real storage which is available for use by cluster users.")]),t._v(" "),s("li",[t._v("Dynamic: When none of the static PVs the administrator created matches a user’s PersistentVolumeClaim, the cluster may try to dynamically provision a volume specially for the PVC. "),s("strong",[t._v("This provisioning is based on StorageClasses")])])]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("ul",[s("li",[t._v("PersistentVolumeClaim binds are exclusive, regardless of how they were bound. A PVC to PV binding is a one-to-one mapping.")]),t._v(" "),s("li",[t._v("Cluster provisioned with many 50Gi PVs would not match a PVC requesting 100Gi. The PVC can be bound when a 100Gi PV is added to the cluster.")])])]),t._v(" "),s("h2",{attrs:{id:"persistentvolumeclaim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#persistentvolumeclaim","aria-hidden":"true"}},[t._v("#")]),t._v(" PersistentVolumeClaim")]),t._v(" "),s("p",[t._v("Creating and using a persistent volume is a three step process:")]),t._v(" "),s("ol",[s("li",[t._v("(OPTIONAL) Provision: Administrator provision a networked storage in the cluster, such as AWS ElasticBlockStore volumes. This is called as PersistentVolume.")]),t._v(" "),s("li",[t._v("Request storage: User requests storage for pods by using claims. Claims can specify levels of resources (CPU and memory), specific sizes and access modes (e.g. can be mounted once read/write or many times write only). This is called as "),s("code",[t._v("PersistentVolumeClaim")]),t._v(".")]),t._v(" "),s("li",[t._v("Use claim: Claims are mounted as volumes and used in pods for storage.")])]),t._v(" "),s("p",[t._v("The "),s("strong",[t._v("access mode")]),t._v("s are:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ReadWriteOnce")]),t._v(" - the volume can be mounted as read-write by a single node")]),t._v(" "),s("li",[s("code",[t._v("ReadOnlyMany")]),t._v(" - the volume can be mounted read-only by many nodes")]),t._v(" "),s("li",[s("code",[t._v("ReadWriteMany")]),t._v(" - the volume can be mounted as read-write by many nodes")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volumeclaim\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("accessModes")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteOnce\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("storage")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200Gi\n")])])]),s("h3",{attrs:{id:"claims-as-volumes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#claims-as-volumes","aria-hidden":"true"}},[t._v("#")]),t._v(" Claims As Volumes")]),t._v(" "),s("p",[t._v("Pods access storage by using the claim as a volume. Claims must exist in the same namespace as the pod using the claim. The cluster finds the claim in the pod’s namespace and uses it to get the PersistentVolume backing the claim. The volume is then mounted to the host and into the pod.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mypod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myfrontend\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"/var/www/html"')]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mypd\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mypd\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("persistentVolumeClaim")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("claimName")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myclaim\n")])])]),s("h2",{attrs:{id:"secret"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#secret","aria-hidden":"true"}},[t._v("#")]),t._v(" Secret")]),t._v(" "),s("p",[s("code",[t._v("Secrets")]),t._v(" are intended to hold sensitive information, such as passwords, OAuth tokens, and ssh keys.\nhttps://github.com/arun-gupta/vault-kubernetes/blob/master/secrets.yaml\nhttp://kubernetesbyexample.com/secrets/")]),t._v(" "),s("ul",[s("li",[t._v("Secrets are namespaced objects, that is, exist in the context of a namespace")]),t._v(" "),s("li",[t._v("You can access them via a volume or an environment variable from a container running in a pod")]),t._v(" "),s("li",[t._v("The secret data on nodes is stored in tmpfs volumes")])]),t._v(" "),s("h3",{attrs:{id:"create-manually"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-manually","aria-hidden":"true"}},[t._v("#")]),t._v(" Create Manually")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# Create files needed for rest of example.")]),t._v("\n$ "),s("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" -n "),s("span",{attrs:{class:"token string"}},[t._v("'admin'")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" ./username.txt\n$ "),s("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" -n "),s("span",{attrs:{class:"token string"}},[t._v("'1f2d1e2e67df'")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" ./password.txt\n")])])]),s("p",[t._v("The "),s("code",[t._v("kubectl create secret")]),t._v(" command packages these files into a Secret")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ kubectl create secret generic db-user-pass --from-file"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("./username.txt --from-file"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("./password.txt\nsecret "),s("span",{attrs:{class:"token string"}},[t._v('"db-user-pass"')]),t._v(" created\n")])])]),s("h3",{attrs:{id:"describe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#describe","aria-hidden":"true"}},[t._v("#")]),t._v(" Describe")]),t._v(" "),s("p",[t._v("Describe the secret. Items in Data are actual values of the secret")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ kubectl describe secrets/db-user-pass\nName:            db-user-pass\nNamespace:       default\nLabels:          "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\nAnnotations:     "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\nType:            Opaque\n\nData\n"),s("span",{attrs:{class:"token operator"}},[t._v("==")]),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v("\npassword.txt:    12 bytes\nusername.txt:    5 bytes\n")])])]),s("p",[t._v("Secrets can be retrieved via the "),s("code",[t._v("kubectl get secret")]),t._v(" command")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ kubectl get secret mysecret -o yaml\napiVersion: v1\ndata:\n  username: YWRtaW4"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  password: MWYyZDFlMmU2N2Rm\nkind: Secret\nmetadata:\n  creationTimestamp: 2016-01-22T18:41:56Z\n  name: mysecret\n  namespace: default\n  resourceVersion: "),s("span",{attrs:{class:"token string"}},[t._v('"164619"')]),t._v("\n  selfLink: /api/v1/namespaces/default/secrets/mysecret\n  uid: cfee02d6-c137-11e5-8d73-42010af00002\ntype: Opaque\n")])])]),s("h3",{attrs:{id:"decode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#decode","aria-hidden":"true"}},[t._v("#")]),t._v(" Decode")]),t._v(" "),s("p",[t._v("Finally, decode the secret using base64")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'MWYyZDFlMmU2N2Rm'")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" base64 --decode\n1f2d1e2e67df\n")])])]),s("h3",{attrs:{id:"as-volume"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as-volume","aria-hidden":"true"}},[t._v("#")]),t._v(" As Volume")]),t._v(" "),s("p",[t._v("Each key in the secret "),s("code",[t._v("data")]),t._v(" map becomes the filename under "),s("code",[t._v("mountPath")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mypod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mypod\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' "/etc/foo" '),s("span",{attrs:{class:"token comment"}},[t._v("# Foo is a directory where items from 'data' will be populated as files")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("readOnly")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo              "),s("span",{attrs:{class:"token comment"}},[t._v("# Name of the volume, referenced in volumeMount")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("secret")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("secretName")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysecret "),s("span",{attrs:{class:"token comment"}},[t._v("# Name of the secret")]),t._v("\n")])])]),s("p",[t._v("Optionally, specify specific path for items in the secret")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mypod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mypod\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"/etc/foo"')]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("readOnly")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("secret")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("secretName")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysecret\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("items")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" username\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("group/my"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("username\n")])])]),s("p",[t._v("What will happen:")]),t._v(" "),s("ul",[s("li",[t._v("username secret is stored under /etc/foo/my-group/my-username file instead of /etc/foo/username.")]),t._v(" "),s("li",[t._v("password secret is not projected")])]),t._v(" "),s("p",[t._v("To consume all keys from the secret, all of them must be listed in the items field. All listed keys must exist in the corresponding secret. Otherwise, the volume is not created.")]),t._v(" "),s("p",[s("strong",[t._v("Consuming Secret Values from Volumes")]),t._v(" "),s("em",[t._v("Mounted Secrets are updated automatically")]),t._v("\nInside the container that mounts a secret volume, the secret keys appear as files and the secret values are base-64 decoded and stored inside these files.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token function"}},[t._v("ls")]),t._v(" /etc/foo/\nusername\npassword\n$ "),s("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" /etc/foo/username\nadmin\n$ "),s("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" /etc/foo/password\n1f2d1e2e67df\n")])])]),s("h3",{attrs:{id:"as-env-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as-env-variables","aria-hidden":"true"}},[t._v("#")]),t._v(" As Env Variables")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("env"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mycontainer\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SECRET_USERNAME      "),s("span",{attrs:{class:"token comment"}},[t._v("# Name of the env variable")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("valueFrom")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("secretKeyRef")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysecret\n            "),s("span",{attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" username\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SECRET_PASSWORD      "),s("span",{attrs:{class:"token comment"}},[t._v("# Name of the env variable")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("valueFrom")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("secretKeyRef")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysecret\n            "),s("span",{attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" password\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{attrs:{class:"token variable"}},[t._v("$SECRET_USERNAME")]),t._v("\nadmin\n$ "),s("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{attrs:{class:"token variable"}},[t._v("$SECRET_PASSWORD")]),t._v("\n1f2d1e2e67df\n")])])]),s("h1",{attrs:{id:"running-containers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#running-containers","aria-hidden":"true"}},[t._v("#")]),t._v(" Running Containers")]),t._v(" "),s("h2",{attrs:{id:"pod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod","aria-hidden":"true"}},[t._v("#")]),t._v(" Pod")]),t._v(" "),s("p",[t._v("A pod is a collection of containers (usually just single container) sharing a network and mount namespace and is the basic unit of deployment in Kubernetes. All containers in a pod are scheduled on the same node. Most of the time "),s("code",[t._v("deployment")]),t._v(" should be used instead. Often, "),s("code",[t._v("init-containers")]),t._v(" are part of the "),s("code",[t._v("pod")]),t._v(".")]),t._v(" "),s("p",[t._v("Here is an example pod with 2 containers.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" twocontainers\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sise\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mhausenblas/simpleservice"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0.5.0\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("9876")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" shell\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" centos"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token number"}},[t._v("7")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"bin/bash"')]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"-c"')]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"sleep 10000"')]),t._v("\n")])])]),s("h2",{attrs:{id:"replication-controller"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replication-controller","aria-hidden":"true"}},[t._v("#")]),t._v(" Replication Controller")]),t._v(" "),s("p",[t._v("A "),s("code",[t._v("replication controller")]),t._v(" (RC) is a supervisor for long-running pods. An RC will launch a specified number of "),s("code",[t._v("pods")]),t._v(" called "),s("code",[t._v("replicas")]),t._v(" and makes sure that they keep running, for example when a node fails or something inside of a pod, that is, in one of its containers goes wrong.")]),t._v(" "),s("p",[s("strong",[t._v("Note that, going forward, the RCs are called "),s("code",[t._v("replica sets")]),t._v(" (RS), supporting set-based selectors. The RS are already in use in the context of "),s("code",[t._v("deployments")]),t._v(".")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReplicationController\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" some"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("namespace\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("replicas")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sise\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" somename\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sise\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sise\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mhausenblas/simpleservice"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0.5.0\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("9876")]),t._v("\n")])])]),s("h2",{attrs:{id:"deployment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployment","aria-hidden":"true"}},[t._v("#")]),t._v(" Deployment")]),t._v(" "),s("p",[t._v("A deployment is a supervisor for pods and replica sets, giving you fine-grained control over how and when a new pod version is rolled out as well as rolled back to a previous state.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1beta1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myapp"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy        "),s("span",{attrs:{class:"token comment"}},[t._v("# Name of the deployment")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("replicas")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2               ")]),s("span",{attrs:{class:"token comment"}},[t._v("# Number of replicas (pods)")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MyApp          "),s("span",{attrs:{class:"token comment"}},[t._v('# Label all pods with "app: MyApp"')]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myapp\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mhausenblas/simpleservice"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0.5.0\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("9876")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SIMPLE_SERVICE_VERSION\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"0.9"')]),t._v("\n")])])]),s("h2",{attrs:{id:"daemonset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#daemonset","aria-hidden":"true"}},[t._v("#")]),t._v(" DaemonSet")]),t._v(" "),s("p",[t._v("A "),s("code",[t._v("DaemonSet")]),t._v(" ensures that all (or some) "),s("code",[t._v("Nodes")]),t._v(" run a copy of a "),s("code",[t._v("Pod")]),t._v(". As nodes are added to the cluster, "),s("code",[t._v("Pods")]),t._v(" are added to them. As nodes are removed from the cluster, those "),s("code",[t._v("Pods")]),t._v(" are garbage collected. Deleting a "),s("code",[t._v("DaemonSet")]),t._v(" will clean up the "),s("code",[t._v("Pods")]),t._v(" it created.")]),t._v(" "),s("p",[t._v("Some typical uses of a DaemonSet are:")]),t._v(" "),s("ul",[s("li",[t._v("running a cluster storage daemon, such as "),s("code",[t._v("glusterd")]),t._v(", "),s("code",[t._v("ceph")]),t._v(", on each node.")]),t._v(" "),s("li",[t._v("running a logs collection daemon on every node, such as "),s("code",[t._v("fluentd")]),t._v(" or "),s("code",[t._v("logstash")]),t._v(".")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DaemonSet\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("updateStrategy")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RollingUpdate     "),s("span",{attrs:{class:"token comment"}},[t._v("# Update strategy")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("maxUnavailable")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1               ")]),s("span",{attrs:{class:"token comment"}},[t._v("# Max unavailable pods when updating")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("minReadySeconds")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("webserver     "),s("span",{attrs:{class:"token comment"}},[t._v('# All pods in DS will have label: "app: frontend-webserver"')]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node          "),s("span",{attrs:{class:"token comment"}},[t._v("# Selects which nodes will run this DS")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" webserver\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),s("p",[t._v("Starting in Kubernetes 1.6, you will be able to do rolling updates with Kubernetes DaemonSets. You’ll have to set the "),s("code",[t._v("updateStrategy")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#service","aria-hidden":"true"}},[t._v("#")]),t._v(" Service")]),t._v(" "),s("p",[t._v("A Kubernetes Service is an abstraction which defines a logical set of Pods and a policy by which to access them - sometimes called a micro-service. The set of Pods targeted by a Service is (usually) determined by a "),s("code",[t._v("Label Selector")])]),t._v(" "),s("p",[t._v("This specification will create a new Service object named “"),s("code",[t._v("my-service")]),t._v("” which targets TCP port 9376 on any "),s("code",[t._v("Pod")]),t._v(' with the "'),s("code",[t._v("app=MyApp")]),t._v('" label. This Service will also be assigned an IP address ('),s("code",[t._v("Cluster IP")]),t._v(").")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service    "),s("span",{attrs:{class:"token comment"}},[t._v("# Name of the service")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MyApp        "),s("span",{attrs:{class:"token comment"}},[t._v('# Service targets pods with "app: MyApp"')]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("targetPort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("9376")]),t._v("\n")])])]),s("p",[t._v("Note that a "),s("code",[t._v("Service")]),t._v(" can map an incoming port to any "),s("code",[t._v("targetPort")]),t._v(". By default the "),s("code",[t._v("targetPort")]),t._v(" will be set to the same value as the "),s("code",[t._v("port")]),t._v(" field. Perhaps more interesting is that "),s("code",[t._v("targetPort")]),t._v(" can be a string, referring to the name of a port in the backend "),s("code",[t._v("Pods")]),t._v(". The actual port number assigned to that name can be different in each backend "),s("code",[t._v("Pod")]),t._v(". This offers a lot of flexibility for deploying and evolving your Services. For example, you can change the port number that pods expose in the next version of your backend software, without breaking clients.")]),t._v(" "),s("p",[s("strong",[t._v('More about services in "Services & Ingress" section.')])]),t._v(" "),s("h1",{attrs:{id:"metadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#metadata","aria-hidden":"true"}},[t._v("#")]),t._v(" Metadata")]),t._v(" "),s("h2",{attrs:{id:"namespace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#namespace","aria-hidden":"true"}},[t._v("#")]),t._v(" Namespace")]),t._v(" "),s("p",[s("code",[t._v("Namespaces")]),t._v(" provide a scope of Kubernetes objects. You can think of it as a workspace you’re sharing with other users. Many objects such as pods and services are namespaced, while some (like nodes) are not. Can have access control or resource quotas.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Namespace\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test    "),s("span",{attrs:{class:"token comment"}},[t._v('# Create namespace called "test"')]),t._v("\n")])])]),s("p",[t._v("Later K8s resources can be deployed to that namespace using "),s("code",[t._v("metadata")]),t._v(". It will be hard coded so this pod will always deploy to that namespace.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" podintest\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test "),s("span",{attrs:{class:"token comment"}},[t._v('# This pod will be deployed in "test" namespace')]),t._v("\n")])])]),s("h2",{attrs:{id:"labels"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#labels","aria-hidden":"true"}},[t._v("#")]),t._v(" Labels")]),t._v(" "),s("p",[s("code",[t._v("Labels")]),t._v(" are the mechanism you use to organize Kubernetes objects. A label is a key-value pair with certain restrictions concerning length and allowed values but without any pre-defined meaning. So you’re free to choose labels as you see fit, for example, to express environments such as ‘this pod is running in production’ or ownership, like ‘department X owns that pod’.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" labelexother\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" production\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("owner")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" michael\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MyApp\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sise\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mhausenblas/simpleservice"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0.5.0\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("9876")]),t._v("\n")])])]),s("h2",{attrs:{id:"annotations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#annotations","aria-hidden":"true"}},[t._v("#")]),t._v(" Annotations")]),t._v(" "),s("p",[t._v('Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not "queryable" and should be preserved when modifying objects.')]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ingress\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ghost"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ingress\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("annotations")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("kubernetes.io/ingress.class")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" traefik  "),s("span",{attrs:{class:"token comment"}},[t._v("# Use annotation to define, which ingress controller to use (Traefik)")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("rules")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"ghost.tadone.pw"')]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("http")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("backend")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("serviceName")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ghost"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("svc\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("servicePort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),s("h1",{attrs:{id:"other"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#other","aria-hidden":"true"}},[t._v("#")]),t._v(" Other")]),t._v(" "),s("h2",{attrs:{id:"cronjob"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cronjob","aria-hidden":"true"}},[t._v("#")]),t._v(" CronJob")]),t._v(" "),s("p",[t._v("https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("kubectl create -f ./cronjob.yaml\nkubectl get cronjob hello\nkubectl get "),s("span",{attrs:{class:"token function"}},[t._v("jobs")]),t._v(" --watch\nkubectl delete cronjob hello\n")])])]),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch/v1beta1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CronJob\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hello\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("schedule")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"*/1 * * * *"')]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("jobTemplate")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hello\n            "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n            "),s("span",{attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /bin/sh\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" date; echo Hello from the Kubernetes cluster\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OnFailure\n")])])])])}],!1,null,null,null);e.options.__file="objects.md";a.default=e.exports}}]);