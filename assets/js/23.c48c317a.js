(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{167:function(s,a,t){"use strict";t.r(a);var e=t(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"troubleshooting-kubernetes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting-kubernetes","aria-hidden":"true"}},[s._v("#")]),s._v(" Troubleshooting Kubernetes")]),s._v(" "),t("h2",{attrs:{id:"find-pods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#find-pods","aria-hidden":"true"}},[s._v("#")]),s._v(" Find Pods")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{attrs:{class:"token comment"}},[s._v("# Example sorting pods by nodeName:")]),s._v("\nkubectl get pods -o wide --sort-by"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),t("span",{attrs:{class:"token string"}},[s._v('"{.spec.nodeName}"')]),s._v("\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{attrs:{class:"token comment"}},[s._v("# Example of getting pods on nodes using label filter:")]),s._v("\nkubectl get pods --all-namespaces  --no-headers --field-selector spec.nodeName"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),t("span",{attrs:{class:"token string"}},[s._v('"k8s-workers-17781035-2"')]),s._v("\n\n"),t("span",{attrs:{class:"token comment"}},[s._v("# Or for all nodes:")]),s._v("\n"),t("span",{attrs:{class:"token keyword"}},[s._v("for")]),s._v(" n "),t("span",{attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{attrs:{class:"token variable"}},[t("span",{attrs:{class:"token variable"}},[s._v("$(")]),s._v("kubectl get nodes -l your_label_key"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("your_label_value --no-headers "),t("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),t("span",{attrs:{class:"token string"}},[s._v('" "')]),s._v(" -f1"),t("span",{attrs:{class:"token variable"}},[s._v(")")])]),t("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    kubectl get pods --all-namespaces  --no-headers --field-selector spec.nodeName"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),t("span",{attrs:{class:"token variable"}},[s._v("${n}")]),s._v("\n"),t("span",{attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{attrs:{class:"token comment"}},[s._v("# Sort by number of restarts:")]),s._v("\nkubectl get pods --sort-by"),t("span",{attrs:{class:"token operator"}},[s._v("=")]),t("span",{attrs:{class:"token string"}},[s._v('"{.status.containerStatuses[:1].restartCount}"')]),s._v("\n")])])]),t("h2",{attrs:{id:"search-logs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#search-logs","aria-hidden":"true"}},[s._v("#")]),s._v(" Search Logs")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{attrs:{class:"token comment"}},[s._v("# If your container has previously crashed, you can access the previous container's crash log with:")]),s._v("\n$ kubectl logs --previous "),t("span",{attrs:{class:"token variable"}},[s._v("${POD_NAME}")]),s._v(" "),t("span",{attrs:{class:"token variable"}},[s._v("${CONTAINER_NAME}")]),s._v("\n")])])])])}],!1,null,null,null);n.options.__file="troubleshooting.md";a.default=n.exports}}]);