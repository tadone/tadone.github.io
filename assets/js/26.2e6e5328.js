(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{169:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://kukulinski.com/10-most-common-reasons-kubernetes-deployments-fail-part-1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("10 Most Common Reasons Kubernetes Deployments Fail (Part 1)"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://kukulinski.com/10-most-common-reasons-kubernetes-deployments-fail-part-2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("10 Most Common Reasons Kubernetes Deployments Fail (Part 2)"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("When pods are not ready for a long time or they restart multiple times:")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._m(5),t._v(" "),s("p",[t._v("The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle.")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://kubernetes.io/docs/tasks/debug-application-cluster/debug-init-containers/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kubernetes.io/Debug-Init-Containers"),s("OutboundLink")],1)])]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),s("p",[t._v("Find out what's wrong with a node:")]),t._v(" "),t._m(17),t._v(" "),t._m(18)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"troubleshooting-kubernetes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting-kubernetes","aria-hidden":"true"}},[this._v("#")]),this._v(" Troubleshooting Kubernetes")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("code",[this._v("kubectl describe pod <pod_name> -n <optional_namespace>")])]),this._v(" "),e("li",[e("code",[this._v("kubectl describe deployment <deployment_name>")])]),this._v(" "),e("li",[e("code",[this._v("kubectl describe replicaset <replicaset_name>")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"find-pods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#find-pods","aria-hidden":"true"}},[this._v("#")]),this._v(" Find Pods")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# Example sorting pods by nodeName:")]),t._v("\nkubectl get pods -o wide --sort-by"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"{.spec.nodeName}"')]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("# find all pods that not in running phase:")]),t._v("\nkubectl get pods --field-selector"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("status.phase"),s("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v("Running --all-namespaces\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# Example of getting pods on nodes using label filter:")]),t._v("\nkubectl get pods --all-namespaces  --no-headers --field-selector spec.nodeName"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"k8s-workers-17781035-2"')]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("# Or for all nodes:")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" n "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{attrs:{class:"token variable"}},[s("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("kubectl get nodes -l your_label_key"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("your_label_value --no-headers "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("cut")]),t._v(" -d "),s("span",{attrs:{class:"token string"}},[t._v('" "')]),t._v(" -f1"),s("span",{attrs:{class:"token variable"}},[t._v(")")])]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    kubectl get pods --all-namespaces  --no-headers --field-selector spec.nodeName"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token variable"}},[t._v("${n}")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("# Sort by number of restarts:")]),t._v("\nkubectl get pods --sort-by"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"{.status.containerStatuses[:1].restartCount}"')]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"pods-phases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pods-phases","aria-hidden":"true"}},[this._v("#")]),this._v(" Pods Phases")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Pending:")]),this._v("\tThe Pod has been accepted by the Kubernetes system, but one or more of the Container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Running:")]),this._v("\tThe Pod has been bound to a node, and all of the Containers have been created. At least one Container is still running, or is in the process of starting or restarting.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Succeeded:")]),this._v("\tAll Containers in the Pod have terminated in success, and will not be restarted.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Failed:")]),this._v("\tAll Containers in the Pod have terminated, and at least one Container has terminated in failure. That is, the Container either exited with non-zero status or was terminated by the system.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Unknown:")]),this._v("\tFor some reason the state of the Pod could not be obtained, typically due to an error in communicating with the host of the Pod.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"search-logs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#search-logs","aria-hidden":"true"}},[this._v("#")]),this._v(" Search Logs")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# Use exec to run commands inside a container")]),t._v("\n$ kubectl "),s("span",{attrs:{class:"token function"}},[t._v("exec")]),t._v(" cassandra -- "),s("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/log/cassandra/system.log\n"),s("span",{attrs:{class:"token comment"}},[t._v("# If your container has previously crashed, you can access the previous container's crash log with:")]),t._v("\n$ kubectl logs --previous "),s("span",{attrs:{class:"token variable"}},[t._v("${POD_NAME}")]),t._v(" "),s("span",{attrs:{class:"token variable"}},[t._v("${CONTAINER_NAME}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"pod-crashing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pod-crashing","aria-hidden":"true"}},[this._v("#")]),this._v(" Pod Crashing")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"pod-crashloopbackoff-starting-then-crashing-then-starting-again-and-crashing-again"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pod-crashloopbackoff-starting-then-crashing-then-starting-again-and-crashing-again","aria-hidden":"true"}},[this._v("#")]),this._v(" Pod CrashLoopBackOff: starting, then crashing, then starting again and crashing again")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("Status")]),t._v(" "),s("th",[t._v("Meaning")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Init:N/M")]),t._v(" "),s("td",[t._v("The Pod has M Init Containers, and N have completed so far.")])]),t._v(" "),s("tr",[s("td",[t._v("Init:Error")]),t._v(" "),s("td",[t._v("An Init Container has failed to execute.")])]),t._v(" "),s("tr",[s("td",[t._v("Init:CrashLoopBackOff")]),t._v(" "),s("td",[t._v("An Init Container has failed repeatedly.")])]),t._v(" "),s("tr",[s("td",[t._v("Pending")]),t._v(" "),s("td",[t._v("The Pod has not yet begun executing Init Containers.")])]),t._v(" "),s("tr",[s("td",[t._v("PodInitializing or Running")]),t._v(" "),s("td",[t._v("The Pod has already finished executing Init Containers.")])]),t._v(" "),s("tr",[s("td",[t._v("ImagePullBackOff")]),t._v(" "),s("td",[t._v("Could not pull the image from registry")])]),t._v(" "),s("tr",[s("td",[t._v("CrashLoopBackOff")]),t._v(" "),s("td",[t._v("Application Crashing after Launch")])]),t._v(" "),s("tr",[s("td",[t._v("RunContainerError")]),t._v(" "),s("td",[t._v("Missing ConfigMap")])]),t._v(" "),s("tr",[s("td",[t._v("ContainerCreating")]),t._v(" "),s("td",[t._v("(Stuck for long time) Missing secret")])]),t._v(" "),s("tr",[s("td",[t._v("Pending (Other)")]),t._v(" "),s("td",[t._v("Resource Quotas, Insufficient Cluster Resources, PersistentVolume fails to mount")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"node-not-schedulable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-not-schedulable","aria-hidden":"true"}},[this._v("#")]),this._v(" Node Not Schedulable")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("code",[t._v("kubectl get nodes")]),t._v(" for status of nodes")]),t._v(" "),s("li",[s("code",[t._v("kubectl top node <node_name>")]),t._v(" for resource allocation")]),t._v(" "),s("li",[s("code",[t._v("kubectl describe node <node_namee>")]),t._v(" to get more indepth info about the node")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("SSH to a node to view the logs: "),e("code",[this._v("journalctl -u kubelet")])])}],!1,null,null,null);n.options.__file="troubleshooting.md";e.default=n.exports}}]);