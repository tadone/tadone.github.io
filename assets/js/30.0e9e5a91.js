(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{195:function(s,t,e){"use strict";e.r(t);var a=e(0),n=Object(a.a)({},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"content"},[s._m(0),s._v(" "),s._m(1),s._v(" "),s._m(2),s._v(" "),s._m(3),s._v(" "),s._m(4),s._m(5),s._v(" "),s._m(6),s._m(7),s._v(" "),s._m(8),s._m(9),s._v(" "),s._m(10),e("hr"),s._v(" "),s._m(11),s._v(" "),s._m(12),e("hr"),s._v(" "),s._m(13),s._v(" "),s._m(14),s._v(" "),s._m(15),e("p",[e("strong",[s._v("Unit File Example")]),s._v(" "),e("a",{attrs:{href:"https://www.digitalocean.com/community/tutorials/understanding-systemd-units-and-unit-files",target:"_blank",rel:"noopener noreferrer"}},[s._v("Understanding Systemd Units and Unit Files"),e("OutboundLink")],1)]),s._v(" "),s._m(16),e("hr"),s._v(" "),s._m(17),s._v(" "),s._m(18)])},[function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"managing-services"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#managing-services","aria-hidden":"true"}},[this._v("#")]),this._v(" Managing Services")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("strong",[this._v("Service")]),this._v(" can be several processes, e.g., httpd (web-service) or a database. Splitting a service into multiple processes is done for performance reasons.\n"),t("strong",[this._v("Process")]),this._v(" - Process is a running program. At a particular instant of time, it can be either running, sleeping, or zombie (completed process, but waiting for it's parent process to pick up the return value).\n"),t("strong",[this._v("Daemon")]),this._v(" is a subset of services that always run in memory waiting to service a request.")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"system"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#system","aria-hidden":"true"}},[this._v("#")]),this._v(" System")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("strong",[this._v("Important Files/Directories")])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("/usr/lib/systemd/system/                "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# systemd unit files")]),s._v("\n/etc/systemd/system/                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Custom systemd files created by the admin")]),s._v("\n/etc/yum.repos.d/name.repo              "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Location of Repository files (updates, software)")]),s._v("\n/etc/shadow                             "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List of users and encrypted passwords")]),s._v("\n/etc/passwd                             "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List of users with UID/GID, home dir, and default shell")]),s._v("\n/etc/group                              "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List of groups with Group ID (GID)")]),s._v("\n/etc/sudoers                            "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List of users that have sudo permissions")]),s._v("\n/etc/hosts                              "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Hosts file for IP to Host binding")]),s._v("\n")])])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("strong",[this._v("Process Management")])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("  a      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# show processes for all users")]),s._v("\n    u      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# display the process(s) user/owner")]),s._v("\n    x      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# also show processes not attached to a terminal")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" aux "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -10           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Show top ten running processes")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" aux "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("process"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("strong",[this._v("Packages RPM")])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# INSTALL")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -ivh "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("rpm-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Install new rpm package")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# INFO")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -q --whatprovides "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" crond"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Find out what rpm package provides a binary")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -q --list                         "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -l list files in package (BINARIES)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -q --configfiles cronie           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -c Conifg files for package")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -q --docfiles "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("rpm_package"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("       "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -d Doc files")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# FIND")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -qa "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" cronie                 "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Query all installed packages")]),s._v("\n")])])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("strong",[this._v("Packages DNF")]),this._v("\nManage software on Fedora")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[this._v("dnf provides crond                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[this._v("# Find out what package provides binary crond.")]),this._v("\n")])])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"users"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#users","aria-hidden":"true"}},[this._v("#")]),this._v(" Users")])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("useradd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Add new user named: new_user")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                     "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Change password for a user")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                         "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# User Info")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("useradd")]),s._v(" -u 999 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("             "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Add new_user with User ID 999")]),s._v("\n        -d /data/projects "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set home for new_user to /data/projects (as opposed to /home/new_user)")]),s._v("\n        -u 1000 -g 500 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Add new_user with User ID 1000 and Group ID 500")]),s._v("\n        -G admins,webadmin "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Add new_user to multiple Groups")]),s._v("\n        -m -d /var/www/ravi -s /bin/bash -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TecMint Owner"')]),s._v(" -U ravi\n\nchsh "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-s login_shell"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("          "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Change user shell")]),s._v("\nchsh -s /bin/bash fred                "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("usermod")]),s._v(" -aG "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("group"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Add user to another group")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" visudo                           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Add user to sudoers")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Same thing without a password")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#%wheel ALL=(ALL)       NOPASSWD: ALL")]),s._v("\nec2-user        ALL"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ALL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       NOPASSWD:ALL\n\ndeluser –remove-home "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("       "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Delete user along with the home directory")]),s._v("\n")])])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"systemd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#systemd","aria-hidden":"true"}},[this._v("#")]),this._v(" SYSTEMD")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("strong",[this._v("Tools")])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("systemctl start/stop/enable/status httpd              "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Start, Stop, Enable, and Status of Service")]),s._v("\nsystemctl list-units -t "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" --state"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("active        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lists all services that are active")]),s._v("\nsystemctl list-unit-files -t "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" --state"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("enabled  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lists all services that are enabled")]),s._v("\n\nhostnamectl set-hostname "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("new_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set system hostname to new_name")]),s._v("\n\ntimedatectl set-timezone Europe/Warsaw                "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set time-zone to Warsaw")]),s._v("\ntimedatectl status                                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Show current time settings")]),s._v("\n\njournalctl -b                           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To see boot-related messages from the current boot")]),s._v("\njournalctl --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 hour ago"')]),s._v("         "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Messages logged within the last hour")]),s._v("\njournalctl -fu nginx.service            "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Follow by unit")]),s._v("\njournalctl -n 50 --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 hour ago"')]),s._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Last 50 entries since an hour ago")]),s._v("\njournalctl --tail 50 -u nginx.service   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Last 50 entires for unit nginx")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# FIREWALLD")]),s._v("\nsystemctl status firewalld                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# FirewallD status")]),s._v("\nfirewall-cmd --list-all                      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List all settings for a default zone")]),s._v("\nfirewall-cmd --permanent --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("7090/tcp "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Open port for default zone")]),s._v("\n")])])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#[Unit]")]),s._v("\nDescription"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("OpenSSH server daemon\nDocumentation"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("man:sshd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("8"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" man:sshd_config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# his directive provides a location for a list of URIs for documentation")]),s._v("\nAfter"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("network.target sshd-keygen.service    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The units listed in this directive will be started before starting the current unit")]),s._v("\nWants"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sshd-keygen.service                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Systemd will attempt to start any units listed here when this unit is activated")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#[Service]")]),s._v("\nEnvironmentFile"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/sysconfig/sshd\nExecStart"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/sbin/sshd -D "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$OPTIONS")]),s._v("\nExecReload"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/bin/kill -HUP "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MAINPID")]),s._v("\nKillMode"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("process\nRestart"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on-failure\nRestartSec"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("42s\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#[Install]")]),s._v("\nWantedBy"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("multi-user.target\n")])])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"ssh-and-scp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh-and-scp","aria-hidden":"true"}},[this._v("#")]),this._v(" SSH And SCP")])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -A user@host                            "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Forward your ssh key")]),s._v("\n\nssh-keygen -t rsa -b 4096                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Generate SSH Key-Pair -t type RSA -b key size 4096")]),s._v("\nssh-keygen -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tadone@gmail.com"')]),s._v("            "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Add custom comment when generating the key-pair")]),s._v("\nssh-keygen -f ~/tad_id                      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Generate SSH Key specyfing the file name")]),s._v("\n\nssh-copy-id user@hostname.example.com\nssh-copy-id "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"user@host -p 6842"')]),s._v("\nssh-copy-id -i ~/.ssh/tad_id.pub user@host                          "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copy public key to new host")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This key will be installed in ~/.ssh/authorized_keys on the remote host")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copy over SSH")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" your_username@remotehost.edu:/some/remote/directory    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copy file TO remote host")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" your_username@remotehost.edu:file /some/local/directory     "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copy file FROM a remote host")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" file1 file2 your_username@remotehost.edu:~                  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copy multiple files")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" -P 2264 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" your_username@remotehost.edu:/some/remote/directory "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Specify a custom port (Capital P)")]),s._v("\n\n")])])])}],!1,null,null,null);t.default=n.exports}}]);