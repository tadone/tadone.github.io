(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{201:function(t,e,s){"use strict";s.r(e);var r=s(0),a=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("Flash SD card using "),s("a",{attrs:{href:"https://github.com/hypriot/flash",target:"_blank",rel:"noopener noreferrer"}},[t._v("flash"),s("OutboundLink")],1),t._v(" tool.")]),t._v(" "),t._m(2),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),s("p",[t._v("Based on: "),s("a",{attrs:{href:"http://www.theghostbit.com/2016/10/setting-up-cups-server-with-docker-on.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker-Cups-Server"),s("OutboundLink")],1),t._v("\nrpi3 = Raspberry Pi3. Running docker image of cups server\nBuild your own image using dockerfile based on ARM architecture.")]),t._v(" "),t._m(7),s("p",[t._v("Server setup:")]),t._v(" "),t._m(8),t._v(" "),s("p",[t._v("In my case the output is")]),t._v(" "),t._m(9),t._v(" "),s("p",[t._v("so the URI is")]),t._v(" "),t._m(10),t._v(" "),s("p",[t._v("Now that we know the URI, we can add the printer to the system. In my case the command is:")]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),s("p",[t._v("We now have to enable the printer with sudo cupsenable $NAME, which in my case translates to")]),t._v(" "),t._m(14),t._v(" "),s("p",[t._v("It is now enabled:")]),t._v(" "),t._m(15),s("p",[t._v("Finally we have to tell CUPS that it may accept print tasks for this printer with:")]),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),s("p",[t._v("Client setup:")]),t._v(" "),s("p",[t._v("Install the appropriate driver for your printer under MacOS or Windows.\nOn MacOS:")]),t._v(" "),s("ul",[s("li",[t._v("Bring up the System Preferences tool.")]),t._v(" "),s("li",[t._v("Choose Print and Scan.")]),t._v(" "),s("li",[t._v("Click on the plus sign to add a printer.")]),t._v(" "),s("li",[t._v("Choose IP (as opposed to Default, Fax or Windows)")]),t._v(" "),s("li",[t._v("Put an address of 192.168.1.10:631")]),t._v(" "),s("li",[t._v("Use IPP protocol")]),t._v(" "),s("li",[t._v("Put a queue of /printers/"),s("CUPS-Queue-Name")],1),t._v(" "),s("li",[t._v("OPTIONALY, change name and location")]),t._v(" "),s("li",[t._v("Use Brother 2300D driver from the driver dropdwon (not Generic PostScript)")]),t._v(" "),s("li",[t._v("Click on Add")])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"raspberrypi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#raspberrypi","aria-hidden":"true"}},[this._v("#")]),this._v(" RaspberryPi")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"hypriot-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hypriot-docker","aria-hidden":"true"}},[this._v("#")]),this._v(" Hypriot Docker")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Install prerequisites")]),t._v("\nbrew "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pv")]),t._v("\nbrew "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" awscli\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Download binary")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -LO https://github.com/hypriot/flash/releases/download/latest/flash\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x flash\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" flash /usr/local/bin/flash\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Flash the sd card passing the static.yml cloud-init ")]),t._v("\nflash -u static.yml ~/Downloads/hypriotos-rpi-v1.9.0.img.zip\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Alternatively download & flash")]),t._v("\nflash https://github.com/hypriot/image-builder-rpi/releases/download/v1.9.0/hypriotos-rpi-v1.9.0.img.zip\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"pi-hole"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pi-hole","aria-hidden":"true"}},[this._v("#")]),this._v(" Pi-hole")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Disable "),e("code",[this._v("resolved")]),this._v(" before running pi-hole")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("sudo")]),this._v(" systemctl disable systemd-resolved.service\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("sudo")]),this._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("service")]),this._v(" systemd-resolved stop\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"cups-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cups-server","aria-hidden":"true"}},[this._v("#")]),this._v(" Cups Server")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Build cupsd")]),t._v("\ndocker build -t cupsd "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get printer's info")]),t._v("\nBUS"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsusb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" Brother "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("}'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\nDEV"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsusb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" Brother "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$4")]),t._v("}'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\nPRINTER"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/bus/usb/'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BUS")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DEV")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# OR")]),t._v("\n`"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("/dev/bus/usb/001/004"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("`\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Run cupsd docker image passing $PRINTER device")]),t._v("\ndocker run -d -p 631:631 --name cups-server --net"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("host --device"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PRINTER")]),t._v(" cupsd\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Attach your printer to the rpi3.")]),this._v(" "),e("li",[this._v("Exec into the container running cups-server.")]),this._v(" "),e("li",[this._v("Find out the URI of your printer with "),e("code",[this._v("lpinfo -v |grep usb")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("direct usb://Brother/HL-L2300D%20series?serial=E73860G5N986807")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("usb://Brother/HL-L2300D%20series?serial=E73860G5N986807")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("lpadmin -p HL-L2300D -v usb://Brother/HL-L2300D%20series?serial=E73860G5N986807")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Now the printer is known to the system but disabled. You can check the status with:\n"),e("code",[this._v("lpstat -p $NAME -l")]),this._v(" In my case I got:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ sudo lpstat -p HL-L2300D -l\nprinter HL-L2300D disabled since Sun 02 Sep 2018 16:22:43 UTC -\n\treason unknown\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("cupsenable HL-L2300D")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ sudo lpstat -p HL-L2300D -l\nprinter HL-L2300D is idle.  enabled since Sun 02 Sep 2018 16:23:17 UTC\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("cupsaccept HL-L2300D")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Hint: If something goes wrong, you can remove the printer with "),e("code",[this._v("lpadmin -x $NAME")]),this._v(" and start from scratch.")])}],!1,null,null,null);a.options.__file="personal.md";e.default=a.exports}}]);