(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{221:function(s,e,t){"use strict";t.r(e);var a=t(0),r=Object(a.a)({},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"raspberrypi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raspberrypi","aria-hidden":"true"}},[s._v("#")]),s._v(" RaspberryPi")]),s._v(" "),t("h3",{attrs:{id:"hypriot-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hypriot-docker","aria-hidden":"true"}},[s._v("#")]),s._v(" Hypriot Docker")]),s._v(" "),t("p",[s._v("Flash SD card using "),t("a",{attrs:{href:"https://github.com/hypriot/flash",target:"_blank",rel:"noopener noreferrer"}},[s._v("flash"),t("OutboundLink")],1),s._v(" tool.")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Install prerequisites")]),s._v("\nbrew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pv")]),s._v("\nbrew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" awscli\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Download binary")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -LO https://github.com/hypriot/flash/releases/download/latest/flash\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x flash\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" flash /usr/local/bin/flash\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Flash the sd card passing the static.yml cloud-init ")]),s._v("\nflash -u static.yml ~/Downloads/hypriotos-rpi-v1.9.0.img.zip\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Alternatively download & flash")]),s._v("\nflash https://github.com/hypriot/image-builder-rpi/releases/download/v1.9.0/hypriotos-rpi-v1.9.0.img.zip\n")])])]),t("h3",{attrs:{id:"pi-hole"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pi-hole","aria-hidden":"true"}},[s._v("#")]),s._v(" Pi-hole")]),s._v(" "),t("p",[s._v("Disable "),t("code",[s._v("resolved")]),s._v(" before running pi-hole")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl disable systemd-resolved.service\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" systemd-resolved stop\n")])])]),t("h3",{attrs:{id:"cups-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cups-server","aria-hidden":"true"}},[s._v("#")]),s._v(" Cups Server")]),s._v(" "),t("p",[s._v("Based on: "),t("a",{attrs:{href:"http://www.theghostbit.com/2016/10/setting-up-cups-server-with-docker-on.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker-Cups-Server"),t("OutboundLink")],1),s._v("\nrpi3 = Raspberry Pi3. Running docker image of cups server\nBuild your own image using dockerfile based on ARM architecture.")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Build cupsd")]),s._v("\ndocker build -t cupsd "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v(".")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Get printer's info")]),s._v("\nBUS"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("lsusb "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" Brother "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("}'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\nDEV"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("lsusb "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" Brother "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v("}'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\nPRINTER"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/dev/bus/usb/'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BUS")]),s._v("/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DEV")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# OR")]),s._v("\n`"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("/dev/bus/usb/001/004"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("`\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Run cupsd docker image passing $PRINTER device")]),s._v("\ndocker run -d -p 631:631 --name cups-server --net"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("host --device"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PRINTER")]),s._v(" cupsd\n")])])]),t("p",[s._v("Server setup:")]),s._v(" "),t("ul",[t("li",[s._v("Attach your printer to the rpi3.")]),s._v(" "),t("li",[s._v("Exec into the container running cups-server.")]),s._v(" "),t("li",[s._v("Find out the URI of your printer with "),t("code",[s._v("lpinfo -v |grep usb")])])]),s._v(" "),t("p",[s._v("In my case the output is")]),s._v(" "),t("p",[t("code",[s._v("direct usb://Brother/HL-L2300D%20series?serial=E73860G5N986807")])]),s._v(" "),t("p",[s._v("so the URI is")]),s._v(" "),t("p",[t("code",[s._v("usb://Brother/HL-L2300D%20series?serial=E73860G5N986807")])]),s._v(" "),t("p",[s._v("Now that we know the URI, we can add the printer to the system. In my case the command is:")]),s._v(" "),t("p",[t("code",[s._v("lpadmin -p HL-L2300D -v usb://Brother/HL-L2300D%20series?serial=E73860G5N986807")])]),s._v(" "),t("p",[s._v("Now the printer is known to the system but disabled. You can check the status with:\n"),t("code",[s._v("lpstat -p $NAME -l")]),s._v(" In my case I got:")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ sudo lpstat -p HL-L2300D -l\nprinter HL-L2300D disabled since Sun 02 Sep 2018 16:22:43 UTC -\n\treason unknown\n")])])]),t("p",[s._v("We now have to enable the printer with sudo cupsenable $NAME, which in my case translates to")]),s._v(" "),t("p",[t("code",[s._v("cupsenable HL-L2300D")])]),s._v(" "),t("p",[s._v("It is now enabled:")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ sudo lpstat -p HL-L2300D -l\nprinter HL-L2300D is idle.  enabled since Sun 02 Sep 2018 16:23:17 UTC\n")])])]),t("p",[s._v("Finally we have to tell CUPS that it may accept print tasks for this printer with:")]),s._v(" "),t("p",[t("code",[s._v("cupsaccept HL-L2300D")])]),s._v(" "),t("p",[s._v("Hint: If something goes wrong, you can remove the printer with "),t("code",[s._v("lpadmin -x $NAME")]),s._v(" and start from scratch.")]),s._v(" "),t("p",[s._v("Client setup:")]),s._v(" "),t("p",[s._v("Install the appropriate driver for your printer under MacOS or Windows.\nOn MacOS:")]),s._v(" "),t("ul",[t("li",[s._v("Bring up the System Preferences tool.")]),s._v(" "),t("li",[s._v("Choose Print and Scan.")]),s._v(" "),t("li",[s._v("Click on the plus sign to add a printer.")]),s._v(" "),t("li",[s._v("Choose IP (as opposed to Default, Fax or Windows)")]),s._v(" "),t("li",[s._v("Put an address of 192.168.1.10:631")]),s._v(" "),t("li",[s._v("Use IPP protocol")]),s._v(" "),t("li",[s._v("Put a queue of /printers/"),t("CUPS-Queue-Name")],1),s._v(" "),t("li",[s._v("OPTIONALY, change name and location")]),s._v(" "),t("li",[s._v("Use Brother 2300D driver from the driver dropdwon (not Generic PostScript)")]),s._v(" "),t("li",[s._v("Click on Add")])])])},[],!1,null,null,null);e.default=r.exports}}]);