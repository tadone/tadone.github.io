(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{166:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"bash-shell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bash-shell","aria-hidden":"true"}},[t._v("#")]),t._v(" Bash Shell")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"shortcuts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shortcuts","aria-hidden":"true"}},[t._v("#")]),t._v(" Shortcuts")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("ctrl-a  "),a("span",{attrs:{class:"token comment"}},[t._v("# Move to the start of line")]),t._v("\nctrl-e  "),a("span",{attrs:{class:"token comment"}},[t._v("# Move to end of a line")]),t._v("\n\nctrl-k  "),a("span",{attrs:{class:"token comment"}},[t._v("# Remove (Cut) text after the cursor")]),t._v("\nctrl-y  "),a("span",{attrs:{class:"token comment"}},[t._v("# Yank text (Copy)")]),t._v("\n\nctrl-r  "),a("span",{attrs:{class:"token comment"}},[t._v("# Search previous command from history")]),t._v("\n")])])]),a("h2",{attrs:{id:"shell-basics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell-basics","aria-hidden":"true"}},[t._v("#")]),t._v(" Shell Basics")]),t._v(" "),a("ul",[a("li",[t._v("Export variable to the environment. All child processes will get this variable: "),a("code",[t._v("export varname=value")])]),t._v(" "),a("li",[t._v("Display current Shell Variables "),a("code",[t._v("set")])]),t._v(" "),a("li",[t._v("Set and Unset Shell Options:"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("shopt")]),t._v(" -s "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("option"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# Set shell option")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("shopt")]),t._v(" -u "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("option"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# Unset shell option")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("Create symbolic link "),a("code",[t._v("ln -s /path/to/file /path/to/symlink")])]),t._v(" "),a("li",[t._v("Pass STDOUT and STDERR to /dev/null: "),a("code",[t._v("command > /dev/null 2>&1")])]),t._v(" "),a("li",[t._v("Time Stamps "),a("code",[t._v("stat file")]),t._v(":\n"),a("ul",[a("li",[t._v("Access - the last time the file was read")]),t._v(" "),a("li",[t._v("Modify - the last time the file was modified (content has been modified). Virtually, every modify is create.")]),t._v(" "),a("li",[t._v("Change - the last time meta data of the file was changed (e.g. permissions) To display this information, you can use stat which is part of the coreutils.")])])])]),t._v(" "),a("p",[a("strong",[t._v("Brace Expanstion")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" foo"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("1,2,3"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(".txt "),a("span",{attrs:{class:"token comment"}},[t._v("# Output: foo1.txt foo2.txt foo3.txt")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("cp")]),t._v(" -v file1.txt"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(",.bak"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# Output: file1.txt -> file1.txt.bak")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" file"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v("d"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(".txt    "),a("span",{attrs:{class:"token comment"}},[t._v("# Output: filea.txt fileb.txt filec.txt filed.txt")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /apache-jail/"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("usr,bin,lib64,dev"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# Make multiple dirs")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("mv")]),t._v(" file."),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("txt,doc"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("      "),a("span",{attrs:{class:"token comment"}},[t._v("# Rename file.txt to file.doc")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Permissions")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# Permissions:")]),t._v("\n1 – "),a("span",{attrs:{class:"token string"}},[t._v('"can execute"')]),t._v("\n2 – "),a("span",{attrs:{class:"token string"}},[t._v('"can write"')]),t._v("\n4 – "),a("span",{attrs:{class:"token string"}},[t._v('"can read"')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# Examples:")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("chmod")]),t._v(" 600 "),a("span",{attrs:{class:"token function"}},[t._v("file")]),t._v(" – owner can "),a("span",{attrs:{class:"token function"}},[t._v("read")]),t._v(" and "),a("span",{attrs:{class:"token function"}},[t._v("write")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("chmod")]),t._v(" 700 "),a("span",{attrs:{class:"token function"}},[t._v("file")]),t._v(" – owner can read, "),a("span",{attrs:{class:"token function"}},[t._v("write")]),t._v(" and execute\n"),a("span",{attrs:{class:"token function"}},[t._v("chmod")]),t._v(" 666 "),a("span",{attrs:{class:"token function"}},[t._v("file")]),t._v(" – all can "),a("span",{attrs:{class:"token function"}},[t._v("read")]),t._v(" and "),a("span",{attrs:{class:"token function"}},[t._v("write")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("chmod")]),t._v(" 777 "),a("span",{attrs:{class:"token function"}},[t._v("file")]),t._v(" – all can read, "),a("span",{attrs:{class:"token function"}},[t._v("write")]),t._v(" and execute\n")])])]),a("h2",{attrs:{id:"gnu-tools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gnu-tools","aria-hidden":"true"}},[t._v("#")]),t._v(" GNU Tools")]),t._v(" "),a("p",[a("strong",[t._v("AWK")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'{ print "),a("span",{attrs:{class:"token variable"}},[t._v("$2")]),t._v(" }'")]),t._v("              "),a("span",{attrs:{class:"token comment"}},[t._v("# Print second position")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'{ print "),a("span",{attrs:{class:"token variable"}},[t._v("$5")]),t._v(' ": " '),a("span",{attrs:{class:"token variable"}},[t._v("$9")]),t._v(" }'")]),t._v("      "),a("span",{attrs:{class:"token comment"}},[t._v("# Print column 5 then : and then column 9")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("awk")]),t._v(" -F "),a("span",{attrs:{class:"token string"}},[t._v('":"')]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'{ print "),a("span",{attrs:{class:"token variable"}},[t._v("$2")]),t._v(" }'")]),t._v("       "),a("span",{attrs:{class:"token comment"}},[t._v("# Use : as a delimiter")]),t._v("\n")])])]),a("p",[a("strong",[t._v("SED")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("sed")]),t._v(" -i -e "),a("span",{attrs:{class:"token string"}},[t._v("'s|foo|bar|g'")]),t._v(" filename\ns   "),a("span",{attrs:{class:"token comment"}},[t._v("# is used to replace (substitute) the found expression “foo” with “bar”")]),t._v("\ng   "),a("span",{attrs:{class:"token comment"}},[t._v("# stands for “global”, meaning to do this for the whole line. If you leave off the g and “foo” appears twice on the same line, only the first “foo” is changed to “bar”.")]),t._v("\n\n-i  "),a("span",{attrs:{class:"token comment"}},[t._v("# option is used to edit in place on filename.")]),t._v("\n-e  "),a("span",{attrs:{class:"token comment"}},[t._v("# option indicates a command to run.")]),t._v("\n")])])]),a("p",[a("strong",[t._v("FIND and XARGS")])]),t._v(" "),a("p",[a("code",[t._v("xargs")]),t._v(" Takes standard output from a command like find and pipes it into standard input")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'one two three'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("xargs")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("mkdir")]),t._v("          "),a("span",{attrs:{class:"token comment"}},[t._v('# Creates 3 dirs "one", "two", "three"')]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'one two three'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("xargs")]),t._v(" -t "),a("span",{attrs:{class:"token function"}},[t._v("rm")]),t._v("          "),a("span",{attrs:{class:"token comment"}},[t._v("# Prints each command that will be executed (-t)")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("find")]),t._v(" /tmp -mtime +14 "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("xargs")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("rm")]),t._v("             "),a("span",{attrs:{class:"token comment"}},[t._v("# Find files older than 2 weeks and then remove them")]),t._v("\n\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("find")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v(" -name "),a("span",{attrs:{class:"token string"}},[t._v("'*.py'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("xargs")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l           "),a("span",{attrs:{class:"token comment"}},[t._v("# Find .py files in current dir and output to word count")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("find")]),t._v(" ./foo -type f -name "),a("span",{attrs:{class:"token string"}},[t._v('"*.txt"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("xargs")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("rm")]),t._v("\n")])])]),a("p",[a("strong",[t._v("TAR")]),t._v("\nTool to create archives (Tape Archive)")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# CREATE")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("tar")]),t._v(" -czvf archive.tar.gz "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("dir"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("# Create Gzipped archive.tar from a directory")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# TEST")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("tar")]),t._v(" -tvf archive.tar              "),a("span",{attrs:{class:"token comment"}},[t._v("# List all files in archive.tar verbosely")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# EXTRACT")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xf archive.tar               "),a("span",{attrs:{class:"token comment"}},[t._v("# Extract all files from archive.tar")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# CREATE TOP LEVEL")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("tar")]),t._v(" -czvf site1.tar.gz -C /var/www/ site1   "),a("span",{attrs:{class:"token comment"}},[t._v("# Create archive from site1 directory (site1 is top level dir)")]),t._v("\n")])])])])}],!1,null,null,null);e.options.__file="bash_shell.md";s.default=e.exports}}]);